apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.newinventory.name }}
spec:
  replicas: {{ .Values.newinventory.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.newinventory.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.newinventory.name }}
    spec:
      containers:
      - name: newinventory
        image: "{{ .Values.newinventory.image }}"
        resources:
          limits:
            memory: "{{ .Values.resources.memory }}"
            cpu: "{{ .Values.resources.cpu }}"
        ports:
        - containerPort: {{ .Values.newinventory.containerPort }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
          httpGet:
            path: {{ .Values.healthCheck.path }}
            port: {{ .Values.newinventory.containerPort }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution: #Hard Node Affinity, except on node extremelyslow
            nodeSelectorTerms:
            - matchExpressions:
                - key: node-type
                  operator: NotIn
                  values:
                    - extremelyslow
          preferredDuringSchedulingIgnoredDuringExecution: #Soft Node Affinity, scheduled on fast and superfast, unless there's something
            #preventing them from being allocated there, for example CPU or Memory. In that case, slow label would be allowed
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                      - fast
                      - superfast

---
apiVersion: v1
kind: Service
metadata:
 name: {{ .Values.newinventory.serviceName }}
spec:
  selector:
    app: {{ .Values.newinventory.name }}
  type: NodePort
  ports:
  - port: {{ .Values.newinventory.servicePort }}
    targetPort: {{ .Values.newinventory.containerPort }}
    nodePort: {{ .Values.newinventory.nodePort }}
